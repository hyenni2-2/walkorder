# Spring Boot 2.0 under Default Pool : Tomcat Jdbc Connection Pool
# Spring Boot 2.0 above Default Pool : HikariCP Connection Pool

server.port=8081

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect


# DataSource Setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://database-1.cm3mxwryaxaz.ap-northeast-2.rds.amazonaws.com:3306/open?serverTimezone=UTC
spring.datasource.username=walkorder
spring.datasource.password=walkorder

# HikariCP Setting
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.validation-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=true

# MyBatis Setting
mybatis.mapper-locations=classpath:/mappers/*.xml

# Multipart Resolver Setting
#spring.servlet.multipart.enabled=true
#spring.servlet.multipart.max-file-size=10000kb
#spring.servlet.multipart.max-request-size=50000kb

# JSP Setting
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#devtools 설정
devtools.livereload.enabled: true
spring.devtools.restart.enabled: true


